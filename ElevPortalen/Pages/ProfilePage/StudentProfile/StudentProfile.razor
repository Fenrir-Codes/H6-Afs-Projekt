<!-- Lavet af Jozsef -->
@using ElevPortalen.Pages.AlertBox
@using ElevPortalen.Pages.DialogModal
@using ElevPortalen.Pages.MessageView
@using ElevPortalen.Pages.SkeletonLoading
@using ElevPortalen.Services
@using ElevPortalen.Data;
@using ElevPortalen.Models
@using System.Security.Claims

@inject StudentService _studentService
@inject SkillService _skillService
@inject MessageService _messageService
@inject NavigationManager NavManager
@inject IJSRuntime jsRuntime

@if (!isLoaded)
{
   <ProfileSkeleton></ProfileSkeleton>
}
else
{
    @if (_student.Any())
    {
        @foreach (var data in _student)
        {
            <!--Social container on top-->
            <div class="row">
                <div class="col-lg-12">
                    <div class="card mb-2">
                        <div class="card-body shadow-sm">
                            <div class="d-flex justify-content-between align-items-center flex-column flex-sm-row">
                                <!-- Icons -->
                                <div class="d-flex mb-sm-0">
                                    <button type="button" class="btn btn-outline-success position-relative btn-sm"
                                    @onclick="() => NavigateToMyMessages(data.receiverId)">
                                        Inbox
                                        <span><i class="fa-solid fa-envelope"></i></span>
                                        @if (unreadMessages > 0)
                                        {
                                            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                                @unreadMessages
                                                <span class="visually-hidden">unread messages</span>
                                            </span>
                                        }
                                        @if (totalMessageCount <= 0)
                                        {
                                            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill">
                                                <span class="visually-hidden">unread messages</span>
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-secondary">
                                                 @totalMessageCount
                                                <span class="visually-hidden">unread messages</span>
                                            </span>                                            
                                        }
                                    </button>

                                    @if (!string.IsNullOrEmpty(data.FacebookLink))
                                    {
                                        <a @onclick="() => NavigateToNewTab(data.FacebookLink)" class="mx-lg-2 mx-sm-1" style="color: black; cursor:pointer">
                                            <span class="fa-stack fa-sm">
                                                <i class="fas fa-circle fa-stack-2x"></i>
                                                <i class="fab fa-facebook fa-stack-1x fa-inverse"></i>
                                            </span>
                                        </a>
                                    }
                                    @if (!string.IsNullOrEmpty(data.InstagramLink))
                                    {
                                        <a @onclick="() => NavigateToNewTab(data.InstagramLink)" class="mx-lg-2 mx-sm-1" style="color: black; cursor:pointer">
                                            <span class="fa-stack fa-sm">
                                                <i class="fas fa-circle fa-stack-2x"></i>
                                                <i class="fab fa-instagram fa-stack-1x fa-inverse"></i>
                                            </span>
                                        </a>
                                    }
                                    @if (!string.IsNullOrEmpty(data.LinkedInLink))
                                    {
                                        <a @onclick="() => NavigateToNewTab(data.LinkedInLink)" class="mx-lg-2 mx-sm-1" style="color: black; cursor:pointer">
                                            <span class="fa-stack fa-sm">
                                                <i class="fas fa-circle fa-stack-2x"></i>
                                                <i class="fab fa-linkedin fa-stack-1x fa-inverse"></i>
                                            </span>
                                        </a>
                                    }
                                    @if (!string.IsNullOrEmpty(data.GitHubLink))
                                    {
                                        <a @onclick="() => NavigateToNewTab(data.GitHubLink)" class="mx-lg-2 mx-sm-1" style="color: black; cursor:pointer;">
                                            <span class="fa-stack fa-sm">
                                                <i class="fas fa-circle fa-stack-2x"></i>
                                                <i class="fab fa-github fa-stack-1x fa-inverse"></i>
                                            </span>
                                        </a>
                                    }
                                </div>
                                <h5 class="fw-medium mb-0 mx-lg-4 mx-sm-1">Velkommen @data.FirstName @data.LastName</h5>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <!--User profile container-->
            <div class="row">
                <div class="col-lg-4">
                    <div class="card mb-2 shadow-sm">
                        <div class="card-body text-center">
                            @if (!string.IsNullOrEmpty(data.profileImage) && ImageExistOnDisk(data.profileImage))
                            {
                                <img src="images/ProfileImages/@data.profileImage" alt="avatar"
                                     class="rounded-circle img-fluid" style="width: 150px; height:150px;">
                            }
                            else
                            {
                                <img src="images/DefaultAvatar.jpg" alt="avatar"
                                     class="rounded-circle img-fluid" style="width: 150px;">
                            }
                            <h5 class="my-3">@data.FirstName @data.LastName</h5>
                            <p class="text-muted mb-3">Specialiseret i @data.Speciality</p>
                            <div class="d-flex justify-content-center mb-3">
                                <button type="button" class="btn btn-outline-success btn-sm mx-2"
                                        @onclick="() => DialogModal!.OpenStudentUpdate(data.StudentId)">
                                    Opdater Profil
                                </button>
                                <button type="button" class="btn btn-outline-danger btn-sm ms-1"
                                        @onclick="() => DeleteStudentData(data.StudentId)" disabled="@(!isConfirmationChecked)">
                                    Slette profil
                                </button>
                            </div>
                            <div class="row-lg-4 gx-3 mb-2">
                                <input class="form-check-input" type="checkbox" @bind="isConfirmationChecked">
                                <label class="form-check-label">
                                    Bekræft Slet
                                </label>
                            </div>
                            <span style="color:red" hidden="@(!isConfirmationChecked)">
                                Dette vil slette dine data inklusiv dine beskeder!
                            </span>
                        </div>
                    </div>
                </div>
                <div class="col-lg-8">
                    <div class="card mb-2">
                        <div class="card-body shadow-sm">
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Dato for registrering</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">@data.RegisteredDate.ToShortDateString()</p>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Username</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">@_Name</p>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Title</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">@data.Title</p>
                                </div>
                            </div>
                            <hr />
                            <div class="row">

                                <div class="col-sm-3">
                                    <p class="mb-0">Fulde navn</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">
                                        @data.FirstName <span> </span>
                                        @if (data.MiddleName != "")
                                        {
                                            @data.MiddleName <span> </span>
                                        }
                                        @data.LastName
                                    </p>
                                </div>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Mobile</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">@data.PhoneNumber</p>
                                </div>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-sm-3 mb-3">
                                    <p class="mb-0">Adresse</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">@data.Address</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(data.Description))
            {
                <!--Description-->
                <div class="row">
                    <div class="col-lg-12">
                        @*   <p class="mb-2 fw-bold">Beskrivelse</p> *@
                        <div class="card mb-2">
                            <div class="card-body shadow-sm">
                                <p class="text-muted mb-0">@data.Description</p>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <!-- Skills section -->
            <div class="row">
                <div class="col-lg-12">
                    @*      <p class="fw-bold">Skills:</p> *@
                    <div class="card mb-2">
                        <div class="card-body shadow-sm">

                            <div class="row">
                                <div class="col-lg-12">
                                    <!--Show skill names section-->
                                    @if (!isAddSectionVisible && !isUpdateSectionVisible)
                                    {
                                        @if (data != null && data.Skills != null)
                                        {
                                            <div class="col-lg-12">
                                                <!--display the names of the skills in a single row-->
                                                <h5>
                                                    @foreach (var skillName in _SkillsOfStudent)
                                                    {
                                                        <span class="badge bg-dark m-1">@skillName</span>
                                                    }
                                                </h5>
                                            </div>
                                            <button class="btn btn-outline-success btn-sm" @onclick="() => ToggleUpdateSkillsSection(data.StudentId)">Opdater</button>
                                        }
                                        else
                                        {
                                            <p>Ingen tilgængelige færdigheder, du kan tilføje dine færdigheder.</p>
                                            <button class="btn btn-outline-success btn-sm" @onclick="ToggleAddSkillsSection">Tilføj</button>
                                        }
                                    }
                                    else if (isAddSectionVisible)
                                    {

                                        <!--Skills Add section-->
                                        <div class="row">
                                            <label class="mb-1 form-label fw-bold" for="_Skills">Færdigheder</label>
                                            <div class="col-md-3 mb-2">
                                                <label class="mb-1 small form-label fw-bold" for="_Skills">Programmeringssprog</label>

                                                <div class="row">
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.CSharp" /> C#
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.Java" /> Java
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.DotNet" /> .Net
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.Typescript" /> TypeScript
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.Python" /> Python
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-md-3 mb-2">
                                                <div class="row">
                                                    <label class="mt-4">
                                                        <input type="checkbox" @bind="_Skills.PHP" /> PHP
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.CPlusPlus" /> C++
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.C" /> C
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.Blazor" /> Blazor
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.JavaScript" /> JavaScript
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-md-3 mb-3">
                                                <label class="mb-1 small form-label fw-bold" for="_Skills">Web-Udvikling</label>

                                                <div class="row">
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.Bootstrap" /> Bootstrap
                                                    </label>

                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.HTML" /> Html
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.CSS" /> CSS
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.SQL" /> SQL
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.NetWork" /> Network
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-md-3 mb-2">
                                                <label class="mb-1 small form-label fw-bold" for="_Skills">Andet</label>

                                                <div class="row">
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.OfficePack" /> Office pakken
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.CloudComputing" /> Cloud technologies
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.VersionControl" /> Git / GitHub
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.Communikation" /> Kommunikation
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.ProblemSolving" /> Problemsolving
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.TeamWorking" /> Team work
                                                    </label>
                                                </div>
                                            </div>
                                        </div>

                                        <button class="btn btn-outline-success btn-sm" @onclick="() => AddSkills(data.StudentId)">Gem</button>
                                        <button class="btn btn-outline-danger btn-sm" @onclick="ToggleAddSkillsSection">Tilbage</button>
                                    }
                                    else
                                    {
                                        <!--Skills update section-->
                                        <div class="row">
                                            <label class="mb-1 form-label fw-bold" for="_Skills">Færdigheder</label>
                                            <div class="col-md-3 mb-2">
                                                <label class="mb-1 small form-label fw-bold" for="_Skills">Programmeringssprog</label>

                                                <div class="row">
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.CSharp" /> C#
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.Java" /> Java
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.DotNet" /> .Net
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.Typescript" /> TypeScript
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.Python" /> Python
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-md-3 mb-2">
                                                <div class="row">
                                                    <label class="mt-4">
                                                        <input type="checkbox" @bind="_Skills.PHP" /> PHP
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.CPlusPlus" /> C++
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.C" /> C
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.Blazor" /> Blazor
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.JavaScript" /> JavaScript
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-md-3 mb-3">
                                                <label class="mb-1 small form-label fw-bold" for="_Skills">Web-Udvikling</label>

                                                <div class="row">
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.Bootstrap" /> Bootstrap
                                                    </label>

                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.HTML" /> Html
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.CSS" /> CSS
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.SQL" /> SQL
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.NetWork" /> Network
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="col-md-3 mb-2">
                                                <label class="mb-1 small form-label fw-bold" for="_Skills">Andet</label>

                                                <div class="row">
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.OfficePack" /> Office pakken
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.CloudComputing" /> Cloud technologies
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.VersionControl" /> Git / GitHub
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.Communikation" /> Kommunikation
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.ProblemSolving" /> Problemsolving
                                                    </label>
                                                    <label>
                                                        <input type="checkbox" @bind="_Skills.TeamWorking" /> Team work
                                                    </label>
                                                </div>
                                            </div>
                                        </div>

                                        <button class="btn btn-outline-success btn-sm"
                                            @onclick="() => UpdateSkills(data.StudentId)">Opdater</button>

                                        <button class="btn btn-outline-danger btn-sm" @onclick="HideUpdateSection">Tilbage</button>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        }
    }
    else if (!_student.Any())
    {
        @if (hasStudentRecoveryData)
        {
            <button class="btn btn-success m-2 mt-3" @onclick="RecoverStudentData">Gendan data 
                <span class="ms-1"><i class="fa-solid fa-arrows-rotate"></i></span></button>


            <AlertBox IsVisible=true Message="Vi har fundet nogle data, som du kan gendanne." isWarning=true waitForSeconds="0"></AlertBox>
            @* <p>The Student's Guid is : @userIdClaim</p> *@

        }
        else
        {
            <button class="btn btn-success m-2" @onclick="NavigateToRegister">Registrer dine data</button>

            <AlertBox IsVisible=true Message="Det ser ud til, at ingen personlige data er blevet tilføjet til din profil, klik på knappen for at registrere dine data."
                      isWarning=true waitForSeconds="0"></AlertBox>
        }

        <ProfileSkeleton></ProfileSkeleton>
    }
    else
    {
        <AlertBox IsVisible=true Message="The profile page can not be shown for some reason check component." waitForSeconds="0" isDanger=true></AlertBox>
    }
}

<!-- DialogModal for update view -->
<DialogModal @ref="DialogModal" OnClose="ReRenderPage"></DialogModal>
<!-- AlertBox -->
<AlertBox @ref="_alertBox" />

@code {

    #region Initialize
    [Parameter]
    public ClaimsPrincipal? _user { get; set; }
    private AuthenticationState? _authState;
    private int Id { get; set; }

    //models
    private List<StudentModel> _student = new List<StudentModel>();
    private SkillModel _Skills = new SkillModel();
    private List<string> _SkillsOfStudent = new List<string>();

    //Modal and AlertBox
    private DialogModal? DialogModal { get; set; }
    private ViewMessages? ViewMessages { get; set; }
    private AlertBox _alertBox = new AlertBox();

    //booleans
    private bool isConfirmationChecked = false;
    private bool isAddSectionVisible = false;
    private bool isUpdateSectionVisible = false;
    private bool hasStudentRecoveryData = false;

    // strings and int
    private string? Message = "";
    private string? _Name = "Default";
    private string userIdClaim = "";

    private int totalMessageCount = 0;
    private int unreadMessages = 0;
    private bool isLoaded = false;

    #endregion

    #region OnInitialized
    protected override async Task OnInitializedAsync()
    {
        isLoaded = false;
        await ReadStudentData();
    }
    #endregion

    #region Read the user data
    private async Task ReadStudentData()
    {
        if (_user != null)
        {
            _Name = _user?.Identity?.Name;

            //Getting the data with the service call from student
            await GetStudentData(_user);
            isLoaded = true;

            if (_student.Any())
            {
                //Read skills data connected to the profile
                await GetSkills(_student);

                // Count the unread messages
                await GetUnreadMessagesCount(_student[0].receiverId);
            }
            else if (!_student.Any() || _student == null)
            {
                await CheckIfStudentHasDataToRecover(_user);
            }
            else
            {
                _alertBox?.SetMessage(true, "Skills could not be read! Reason could be: _student list returned null", 0, warning: true);
            }
        }
        else
        {
            _alertBox?.SetMessage(true, "_user claim not found in modul - StudentProfile",0 , danger: true);
        }
    }
    #endregion

    #region Getting the data with the service call from student
    private async Task GetStudentData(ClaimsPrincipal _user)
    {
        _student = await _studentService.ReadData(_user);
    }
    #endregion

    #region Getting the skill Name to List (string)
    private async Task GetSkills(List<StudentModel> data)
    {
        foreach (var studentData in _student)
        {
            _SkillsOfStudent = await _skillService.GetSkills(studentData);
        }
    }
    #endregion

    #region Delete function
    private async Task DeleteStudentData(int id)
    {
        if (isConfirmationChecked)
        {
            await _skillService.DeleteSkills(id);
            await _studentService.Delete(id);
            await _messageService.DeleteAllWithReceiverId(id);
            NavManager.NavigateTo("/");
        }
    }
    #endregion

    #region Add Skills Function
    private async Task AddSkills(int studentId)
    {
        var (message, success) = await _skillService.CreateSkills(studentId, _Skills);
        if (success)
        {
            _alertBox.SetMessage(true, message, 2000, success: true);
            await OnInitializedAsync();
            isAddSectionVisible = false;
        }
        else
        {
            _alertBox.SetMessage(true, message, 10000, danger: true);
        }
    }
    #endregion

    #region Update Skills Function
    private async Task UpdateSkills(int studentId)
    {
        var (message, success) = await _skillService.UpdateSkills(studentId, _Skills);
        if (success)
        {
            _alertBox.SetMessage(true, message, 2000, success: true);
            isUpdateSectionVisible = false;
            await OnInitializedAsync();
        }
        else
        {
            _alertBox.SetMessage(true, message, 10000, danger: true);
        }

    }
    #endregion

    #region Toggle Button For Add Section
    void ToggleAddSkillsSection()
    {
        isAddSectionVisible = !isAddSectionVisible;
    }
    #endregion

    #region Toggle button for Update section
    private async Task ToggleUpdateSkillsSection(int id)
    {
        isUpdateSectionVisible = true;
        var (message, skills) = await _skillService.GetSkillsByStudentId(id);
        if (skills != null)
        {
            _Skills = skills;
        }
        else
        {
            _alertBox.SetMessage(true, message, 10000, danger:true);
        }
    }
    #endregion

    #region Toggle For The Update Section
    void HideUpdateSection()
    {
        isUpdateSectionVisible = !isUpdateSectionVisible;
    }
    #endregion

    #region Re-RenderPage function for re-renderint the profile page on change
    private async void ReRenderPage()
    {
        await ReadStudentData();
        StateHasChanged();
    }
    #endregion

    #region navigation to register
    private void NavigateToRegister()
    {
        NavManager.NavigateTo("/registerprofile");
    }
    #endregion

    #region Navigate to Messages
    private void NavigateToMyMessages(int Id)
    {
        NavManager.NavigateTo($"/viewmessages/{Id}");
    }
    #endregion

    #region Navigate to website Link with opening a new window
    public async Task NavigateToNewTab(string link)
    {
        string url = "https://" + link;
        await jsRuntime.InvokeVoidAsync("open", url, "_blank");
    }
    #endregion

    #region Checking is student has recovery data if nothing exist in their profile
    private async Task CheckIfStudentHasDataToRecover(ClaimsPrincipal _user)
    {
        userIdClaim = _user.Claims.FirstOrDefault()!.Value;
        if (userIdClaim != null && Guid.TryParse(userIdClaim, out Guid userIdGuid))
        {
            bool recoveryDataExists = await _studentService.CheckRecoveryDataExist(userIdGuid);
            hasStudentRecoveryData = recoveryDataExists;
        }
    }
    #endregion

    #region Recover Student Data with their Guid
    private async Task RecoverStudentData()
    {
        if (userIdClaim != null && Guid.TryParse(userIdClaim, out Guid userIdGuid))
        {
            Message = await _studentService.RecoverStudentData(userIdGuid);
            _alertBox.SetMessage(true, Message, 2000, success: true);
            await OnInitializedAsync();
        }
        else
        {
            _alertBox.SetMessage(true, $"An error occurred while recovering the data!", 0, danger: true);
        }
    }
    #endregion

    #region Count the unread messages
    private async Task GetUnreadMessagesCount(int Id)
    {
        var (haveUnreadMessage, count) = await _messageService.GetUnreadMessageCount(Id);
        if (haveUnreadMessage)
        {
            unreadMessages = count;
        }
        else
        {
            totalMessageCount = count;
        }
    }
    #endregion

    #region Check for the image existing on the disk
    private bool ImageExistOnDisk(string imageName)
    {
        // path based on folders
        var imagePath = $"wwwroot/images/ProfileImages/{imageName}";
        return File.Exists(imagePath);
    }
    #endregion

}
