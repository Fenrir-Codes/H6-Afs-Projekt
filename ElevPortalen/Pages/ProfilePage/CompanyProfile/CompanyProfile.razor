<!-- Lavet af Jozsef -->
@using ElevPortalen.Pages.AlertBox
@using ElevPortalen.Pages.DialogModal
@using ElevPortalen.Pages.ProfilePage.StudentProfile
@using ElevPortalen.Pages.SkeletonLoading
@using ElevPortalen.Services;
@using ElevPortalen.Data;
@using ElevPortalen.Models;
@using System.Security.Claims

@inject CompanyService _companyService
@inject MessageService _messageService
@inject NavigationManager NavManager
@inject IJSRuntime jsRuntime

@if (!isLoaded)
{
    <ProfileSkeleton></ProfileSkeleton>
}
else
{
    @if (_company.Any())
    {
        @foreach (var data in _company)
        {
            <!--Social container on top-->
            <div class="row">
                <div class="col-lg-12">
                    <div class="card mb-2 mt-4">
                        <div class="card-body shadow-sm">
                            <div class="d-flex justify-content-between align-items-center flex-column flex-sm-row">
                                <!-- Icons -->
                                <div class="d-flex mb-sm-0">
                                    <button type="button" class="btn btn-outline-success position-relative btn-sm" @onclick="() => NavigateToMyMessages(data.receiverId)">
                                        Inbox 
                                        <span><i class="fa-solid fa-envelope"></i></span>
                                        @if (unreadMessages > 0)
                                        {
                                            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                                @unreadMessages
                                                <span class="visually-hidden">unread messages</span>
                                            </span>
                                        }
                                    </button>
                                </div>
                                <h5 class="fw-medium mb-0 mx-lg-4 mx-sm-1">Velkommen @data.CompanyName</h5>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!--User profile container-->
            <div class="row">
                <div class="col-lg-4">
                    <div class="card mb-2">
                        <div class="card-body text-center shadow-sm">
                            @if (!string.IsNullOrEmpty(data.profileImage) && ImageExistOnDisk(data.profileImage))
                            {
                                <img src="images/ProfileImages/@data.profileImage" alt="avatar"
                                     class="rounded-circle img-fluid" style="width: 150px;">
                            }
                            else
                            {
                                <img src="images/DefaultAvatar.jpg" alt="avatar"
                                     class="rounded-circle img-fluid" style="width: 150px;">
                            }
                            <h5 class="my-3">@data.CompanyName</h5>
                            <p class="text-muted mb-4">@data.CompanyAddress</p>
                            <div class="d-flex justify-content-center mb-2">
                                <button type="button" class="btn btn-outline-success mx-2"
                                        @onclick="() => DialogModal!.OpenCompanyUpdate(data.CompanyId)">
                                    Opdater Profil
                                </button>
                                <button type="button" class="btn btn-outline-danger ms-1"
                                        @onclick="() => DeleteCompanyData(data.CompanyId)" disabled="@(!isConfirmationChecked)">
                                    Slet Profil
                                </button>
                            </div>
                            <div class="row-lg-4 gx-3 mb-3">
                                <input class="form-check-input" type="checkbox" @bind="isConfirmationChecked">
                                <label class="form-check-label">
                                    Bekræft Slet
                                </label>
                            </div>
                            <span style="color:red" hidden="@(!isConfirmationChecked)">
                                Dette vil slette dine personale data!
                            </span>
                        </div>
                    </div>
                </div>
                <div class="col-lg-8">
                    <div class="card mb-2">
                        <div class="card-body shadow-sm">
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Dato for registrering</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">@data.RegisteredDate.ToShortDateString()</p>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Username</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">@_Name</p>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Region</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">
                                        @data.Region
                                    </p>
                                </div>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Email</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">
                                        @data.Email
                                    </p>
                                </div>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Website</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">
                                        <button class="btn btn-success mb-0 btn-sm"
                                        @onclick="() => NavigateToNewTab(data.Link)">Besøg hjemmeside</button>
                                    </p>
                                </div>
                            </div>
                            <hr/>
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Opret jobtilbud</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">
                                        <button class="btn btn-success mb-0 btn-sm"
                                                @onclick="() => DialogModal?.OpenJobOfferDialog(data.CompanyId, data.senderId,data.receiverId, data.CompanyName)">
                                            Opret Jobtilbud
                                        </button>

                                        <button class="btn btn-success mb-0 btn-sm"
                                                @onclick="() => ShowMyJobOffers(data.CompanyId)">
                                            Vis mine jobtilbud
                                        </button>
                                    </p>
                                </div>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Phone</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">@data.PhoneNumber</p>
                                </div>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Leder efter</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">
                                        @data.Preferences
                                    </p>
                                </div>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Søger Elev</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">
                                        @if (data.IsHiring)
                                        {
                                            <span>Ja</span>
                                        }
                                        else
                                        {
                                            <span>Nej</span>
                                        }
                                    </p>
                                </div>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Synlig profil</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">
                                        @if (data.IsVisible)
                                        {
                                            <span>Ja</span>
                                        }
                                        else
                                        {
                                            <span>Nej</span>
                                        }
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(data.Description))
            {
                <!--Description-->
                <div class="row">
                    <div class="col-lg-12">
                        <div class="card mb-2">
                            <div class="card-body shadow-sm">
                                <p class="text-muted mb-0">@data.Description</p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    }
    else if (!_company.Any())
    {
        @if (hasCompanyRecoveryData)
        {
            <button class="btn btn-success m-2 mt-3" @onclick="RecoverCompanyData">Gendan Firma data
                <span class="ms-1"><i class="fa-solid fa-arrows-rotate"></i></span></button>

            <AlertBox IsVisible=true Message="Vi har fundet nogle data, som du kan gendanne." isWarning=true waitForSeconds="0"></AlertBox>
            @* <p>The Company's Guid is : @userIdClaim</p> *@
        }
        else
        {
            <button class="btn btn-success m-2" @onclick="NavigateToRegister">Registrer dine data</button>

            <AlertBox IsVisible=true Message="Det ser ud til, at ingen personlige data er blevet tilføjet til din profil, klik på knappen for at registrere dine data."
                      isWarning=true waitForSeconds="0"></AlertBox>
        }

        <ProfileSkeleton></ProfileSkeleton>
    }
    else
    {
        <AlertBox IsVisible=true Message="The profile page can not be shown for some reason check component -> CompanyProfile" waitForSeconds="0" isDanger=true></AlertBox>
    }
}
<!-- DialogModal for update view -->
<DialogModal @ref="DialogModal" OnClose="ReRenderPage"></DialogModal>
<!-- AlertBox -->
<AlertBox @ref="_aletBox" />

@code {

    #region Initialize
    [Parameter]
    public ClaimsPrincipal? _user { get; set; }
    private int Id { get; set; }

    private List<CompanyModel> _company = new List<CompanyModel>();

    //Modal and AlertBox
    private DialogModal? DialogModal { get; set; }
    private AlertBox _aletBox = new AlertBox();

    private string? Message = "";
    private string _Name = "Default";
    private string userIdClaim = "";
    private int newMessages = 0;

    private bool isConfirmationChecked = false;
    private bool isAddSectionVisible = false;
    private bool isUpdateSectionVisible = false;
    private bool hasCompanyRecoveryData = false;
    private bool isLoaded = false;

    private int unreadMessages = 0;

    #endregion

    #region OnInitialized
    protected override async Task OnInitializedAsync()
    {
        isLoaded = false;
        await ReadCompanyData();
    }
    #endregion

    #region Read the Company Data
    private async Task ReadCompanyData()
    {

        if (_user != null)
        {
            _Name = _user?.Identity?.Name;

            //Getting the data with the service call from company
            await GetCompanyData(_user);

            isLoaded = true;

            if (!_company.Any() || _company == null)
            {
                await CheckIfCompanyHasDataToRecover(_user);
            }
            else
            {
                // Count the unread messages
                await GetUnreadMessagesCount(_company[0].receiverId);
            }

        }
        else
        {
            _aletBox?.SetMessage(true, "_user claim not found in modul - CompanyProfile", 0, danger: true);
        }

    }
    #endregion

    #region Getting the data with the service call from company
    private async Task GetCompanyData(ClaimsPrincipal _user)
    {
        _company = await _companyService.ReadData(_user);
    }
    #endregion

    #region Navigate to company website Link with opening new window
    public async Task NavigateToNewTab(string link)
    {
        string url = "https://" + link;
        await jsRuntime.InvokeVoidAsync("open", url, "_blank");
    }
    #endregion

    #region Delete Function
    private async Task DeleteCompanyData(int id)
    {
        if (isConfirmationChecked)
        {
            await _companyService.Delete(id);
            NavManager.NavigateTo("/");
        }
    }
    #endregion

    #region Re-RenderPage function for re-renderint the profile page on change
    private async void ReRenderPage()
    {
        await ReadCompanyData();
        StateHasChanged();
    }
    #endregion

    #region navigation to register pages
    private void NavigateToRegister()
    {
        NavManager.NavigateTo("/registerprofile");
    }
    #endregion

    #region Navigate to Messages
    private void NavigateToMyMessages(int Id)
    {
        NavManager.NavigateTo($"/viewmessages/{Id}");
    }
    #endregion

    #region Navigate to MyOffers
    private void ShowMyJobOffers(int Id)
    {
        NavManager.NavigateTo($"/myjoboffers/{Id}");
    }
    #endregion

    #region Checking is company has recovery data if nothing exist in their profile
    private async Task CheckIfCompanyHasDataToRecover(ClaimsPrincipal _user)
    {
        userIdClaim = _user.Claims.FirstOrDefault()!.Value;
        if (userIdClaim != null && Guid.TryParse(userIdClaim, out Guid userIdGuid))
        {
            bool recoveryDataExists = await _companyService.CheckRecoveryDataExist(userIdGuid);
            hasCompanyRecoveryData = recoveryDataExists;
        }
    }
    #endregion

    #region Recover Companyt Data with their Guid
    private async Task RecoverCompanyData()
    {
        if (userIdClaim != null && Guid.TryParse(userIdClaim, out Guid userIdGuid))
        {
            var (message, success) = await _companyService.RecoverCompanyData(userIdGuid);
            if (success)
            {
                _aletBox.SetMessage(true, message, 2000, success: true);
                await OnInitializedAsync();
            }
            else
            {
                _aletBox.SetMessage(true, message, 10000, danger: true);
            }

        }
        else
        {
            _aletBox.SetMessage(true, $"An error occurred while recovering the data!", 0, danger: true);
        }
    }
    #endregion

    #region Count the unread messages
    private async Task GetUnreadMessagesCount(int Id)
    {
        unreadMessages = await _messageService.GetUnredMessageCount(Id);
    }
    #endregion

    #region Check for the image existing on the disk
    private bool ImageExistOnDisk(string imageName)
    {
        // path based on folders
        var imagePath = $"wwwroot/images/ProfileImages/{imageName}";
        return File.Exists(imagePath);
    }
    #endregion

}
