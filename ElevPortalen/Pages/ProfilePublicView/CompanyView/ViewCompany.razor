<!-- Lavet af Jozsef -->
@page "/viewcompany"

@using ElevPortalen.Pages.AlertBox
@using ElevPortalen.Data;
@using ElevPortalen.Pages.DialogModal
@using ElevPortalen.Services;
@using ElevPortalen.Models;
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims

@inject CompanyService _companyService
@inject StudentService _studentService
@inject NavigationManager NavManager
@inject IJSRuntime jsRuntime
@inject AuthenticationStateProvider AuthenticationStateProvider

@foreach (var data in _company)
{
    <!--Social container on top-->
    <div class="row mt-4">
        <div class="col-lg-12">
            <div class="card mb-4">
                <div class="card-body shadow-sm">
                    <div class="d-flex align-items-center">
                       <p class=""></p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-4">
            <div class="card mb-4">
                <div class="card-body text-center shadow-sm">
                    @if (!string.IsNullOrEmpty(data.profileImage) && ImageExistOnDisk(data.profileImage))
                    {
                        <img src="images/ProfileImages/@data.profileImage" alt="avatar"
                             class="rounded-circle img-fluid" style="width: 150px;">
                    }
                    else
                    {
                        <img src="images/DefaultAvatar.jpg" alt="avatar"
                             class="rounded-circle img-fluid" style="width: 150px;">
                    }
                    <h5 class="my-3">@data.CompanyName</h5>
                    <p class="text-muted mb-3">@data.CompanyAddress</p>
                </div>
            </div>
            </div>
            <div class="col-lg-8">
                <div class="card mb-4">
                    <div class="card-body shadow-sm">
                        <div class="row">
                            <div class="col-sm-3">
                                <p class="mb-0">Dato for registrering</p>
                            </div>
                            <div class="col-sm-9">
                                <p class="text-muted mb-0">@data.RegisteredDate.ToShortDateString()</p>
                            </div>
                        </div>
                        <hr />             
                        <div class="row">
                            <div class="col-sm-3">
                                <p class="mb-0">Region</p>
                            </div>
                            <div class="col-sm-9">
                                <p class="text-muted mb-0">
                                    @data.Region
                                </p>
                            </div>
                        </div>
                        <hr>
                        <div class="row">
                            <div class="col-sm-3">
                                <p class="mb-0">Email</p>
                            </div>
                            <div class="col-sm-9">
                                <p class="text-muted mb-0">
                                    @data.Email
                                </p>
                            </div>
                        </div>
                        <hr>
                        <div class="row">
                            <div class="col-sm-3">
                                <p class="mb-0">Website</p>
                            </div>
                            <div class="col-sm-9">
                                <button class="btn btn-success mb-0 btn-sm" @onclick="NavigateToNewTab">Besøg hjemmeside</button>
                            </div>
                        </div>
                        <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <p class="mb-0">Kontakt</p>
                        </div>
                        <div class="col-sm-9">
                            <button class="btn btn-success mb-0 btn-sm" @onclick="() =>
                                DialogModal!.OpenMessageDialog(data.CompanyId, senderId, data.CompanyName, null)">
                                Send besked
                            </button>
                        </div>
                    </div>
                    <hr />
                        <div class="row">
                            <div class="col-sm-3">
                                <p class="mb-0">Phone</p>
                            </div>
                            <div class="col-sm-9">
                                <p class="text-muted mb-0">@data.PhoneNumber</p>
                            </div>
                        </div>
                        <hr>
                        <div class="row">
                            <div class="col-sm-3">
                                <p class="mb-0">Leder efter</p>
                            </div>
                            <div class="col-sm-9">
                                <p class="text-muted mb-0">
                                    @data.Preferences
                                </p>
                            </div>
                        </div>   
                        <hr>
                        <div class="row">
                            <div class="col-sm-3">
                                <p class="mb-0">Søger Elev</p>
                            </div>
                            <div class="col-sm-9">
                                <p class="text-muted mb-0">
                                    @if (data.IsHiring)
                                    {
                                        <span>Ja</span>
                                    }
                                    else
                                    {
                                        <span>Nej</span>
                                    }
                                </p>
                            </div>
                        </div>
                        <hr>
                        <div class="row">
                            <div class="col-sm-3">
                                <p class="mb-0">Synlig profil</p>
                            </div>
                            <div class="col-sm-9">
                                <p class="text-muted mb-0">
                                    @if (data.IsVisible)
                                    {
                                        <span>Ja</span>
                                    }
                                    else
                                    {
                                        <span>Nej</span>
                                    }
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    @if (!string.IsNullOrEmpty(data.Description))
    {
        <!--Description-->
        <div class="row">
            <div class="col-lg-12">
                @*   <p class="mb-2 fw-bold">Beskrivelse</p> *@
                <div class="card mb-2">
                    <div class="card-body shadow-sm">
                        <p class="m-1">@data.Description</p>
                    </div>
                </div>
            </div>
        </div>
    }
}
<DialogModal @ref="DialogModal" OnClose="ReRenderPage"></DialogModal>
<AlertBox @ref="_alertBox" />

@code {
    [Parameter]
    public int Id { get; set; }
    private List<CompanyModel> _company = new List<CompanyModel>();
    private AlertBox _alertBox = new AlertBox();
    private DialogModal? DialogModal { get; set; }
    public ClaimsPrincipal? _user { get; set; }
    private AuthenticationState? _authState;
    private int senderId = 0;


    #region Oninitialize
    protected override async Task OnInitializedAsync()
    {
        await GetCompanyProfile(Id);
        await GetTheStudentIdAsSenderId();
    }
    #endregion

    #region Getting the data with the service call from student
    public async Task GetCompanyProfile(int id)
    {
        _company = await _companyService.GetCompanyByIdToList(id);
    }
    #endregion

    #region Navigate to company website Link with opening new window
    public async Task NavigateToNewTab()
    {
        string url = "https://" + _company[0].Link;
        await jsRuntime.InvokeVoidAsync("open", url, "_blank");
    }
    #endregion

    #region Re-RenderPage function for re-renderint the profile page on change
    private void ReRenderPage()
    {
        StateHasChanged();
    }
    #endregion

    #region Check for the image existing on the disk
    private bool ImageExistOnDisk(string imageName)
    {
        // path based on folders
        var imagePath = $"wwwroot/images/ProfileImages/{imageName}";
        return File.Exists(imagePath);
    }
    #endregion

    #region Get the id as sender id
    private async Task GetTheStudentIdAsSenderId()
    {
        // Getting the user current authentication state.
        _authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        if (_authState != null)
        {
            _user = _authState.User;
            var student = await _studentService.ReadData(_user);
            if (student != null)
            {
                senderId = student[0].StudentId;
            }
        }
    }
    #endregion

}
